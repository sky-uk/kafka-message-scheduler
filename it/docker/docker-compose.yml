version: '3.9'

services:
  kafka-message-scheduler:
    image: ${CONTAINER_REPOSITORY}/kafka-message-scheduler:latest<localBuild>
    restart: "on-failure"
    ports:
      - "9401:9401"
    environment:
      OTEL_METRICS_EXPORTER: prometheus
      OTEL_EXPORTER_PROMETHEUS_PORT: 9401
      OTEL_SERVICE_NAME: kafka-message-scheduler
      OTEL_INSTRUMENTATION_GRPC_ENABLED: 'false'
      OTEL_TRACES_EXPORTER: 'none'
      OTEL_LOGS_EXPORTER: 'none'
      OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'grpc'
      KAFKA_BROKERS: 'kafka:9092'
      AVRO_SCHEDULE_TOPICS: 'avro-schedules'
      JSON_SCHEDULE_TOPICS: 'json-schedules'
      KMS_LOGGING_LOGSTASH: 'true'
      KMS_LOGGING_LEVEL: INFO
      KMS_ROOT_LOGGING_LEVEL: INFO
    depends_on:
      kafka:
        condition: service_started

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://localhost:${KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT

#  http://localhost:9090/ - Uncomment to expose Prometheus for local metrics testing.
#  prometheus:
#    image: prom/prometheus
#    command: --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - ${PWD}/docker/prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"


# http://localhost:8080/ - Uncomment to expose AKHQ for viewing Kafka topic contents.
#  akhq:
#    image: tchiotludo/akhq:0.25.1
#    depends_on:
#      - kafka
#    ports:
#      - "8080:8080"
#    volumes:
#      - ${PWD}/docker/akhq.yml:/app/application.yml
#    environment:
#      AKHQ_CONFIGURATION: |
#        akhq:
#          connections:
#              map:
#                properties:
#                  bootstrap.servers: "kafka:9092"
#                schema-registry:
#                  url: "http://schema-registry:${SCHEMA_REGISTRY_PORT}"
#                  type: "confluent"